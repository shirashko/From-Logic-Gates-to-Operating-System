// This file is part of nand2tetris, as taught in The Hebrew University,
// and was written by Aviv Yaish, and is published under the Creative 
// Common Attribution-NonCommercial-ShareAlike 3.0 Unported License 
// https://creativecommons.org/licenses/by-nc-sa/3.0/

/**
The output is a "left-shift" of the input:
- Every input bit is moved one position to the left, A new "0" bit is inserted as the right-most bit.
Note that this operation is (usually) equivalent to multiplying the input by 2. This definition is also called an 
arithmetic left-shift, and is useful for the efficient implementation of various operations which we will see later on in the course.

For example:
ShiftLeft(0000000000000001)=0000000000000010 // ShiftLeft(1)=2
ShiftLeft(0100000000000000)=1000000000000000
ShiftLeft(1000000000000000)=0000000000000000
**/

CHIP ShiftLeft{
    IN in[16];
    OUT out[16];
     
    PARTS:
	// Put you code here:
    And(a=in[14], b=in[14], out=out[15]);
    And(a=in[13], b=in[13], out=out[14]);
    And(a=in[12], b=in[12], out=out[13]);
    And(a=in[11], b=in[11], out=out[12]);
    And(a=in[10], b=in[10], out=out[11]);
    And(a=in[9], b=in[9], out=out[10]);
    And(a=in[8], b=in[8], out=out[9]);
    And(a=in[7], b=in[7], out=out[8]);
    And(a=in[6], b=in[6], out=out[7]);
    And(a=in[5], b=in[5], out=out[6]);
    And(a=in[4], b=in[4], out=out[5]);
    And(a=in[3], b=in[3], out=out[4]);
    And(a=in[2], b=in[2], out=out[3]);
    And(a=in[1], b=in[1], out=out[2]);
    And(a=in[0], b=in[0], out=out[1], out[0]=false);
}